<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>R some blog</title>
    <link>https://rpahl.github.io/r-some-blog/</link>
    <atom:link href="https://rpahl.github.io/r-some-blog/index.xml" rel="self" type="application/rss+xml"/>
    <description>Some hopefully useful (or even awesome) stuff related to R programming.
</description>
    <image>
      <title>R some blog</title>
      <url>https://rpahl.github.io/r-some-blog/images/meatwork-toon-close.jpg</url>
      <link>https://rpahl.github.io/r-some-blog/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Mon, 07 Oct 2024 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Nested unit tests with testthat</title>
      <link>https://rpahl.github.io/r-some-blog/posts/2024-10-07-nested-unit-tests-with-testthat</link>
      <description>The testthat package is the most widely used tool for unit testing in R.
However, many users may not be aware of the possibility to nest test blocks
within each other. In this post, I demonstrate how this underused feature
provides a great way to structure and manage your unit tests.</description>
      <category>testthat</category>
      <category>unit testing</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/2024-10-07-nested-unit-tests-with-testthat</guid>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/2024-10-07-nested-unit-tests-with-testthat/nested-tests.png" medium="image" type="image/png" width="1024" height="1024"/>
    </item>
    <item>
      <title>Readable code with base R (part 2)</title>
      <link>https://rpahl.github.io/r-some-blog/posts/readable-code-part2</link>
      <description>It's been a while since my first on this topic.
Nevertheless, it remains an important issue as (in my humble view) there is
still too much code appearing in R packages that lacks good readability.
So I hope this post helps to promote the beauty of readable code.</description>
      <category>base R</category>
      <category>coding style</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/readable-code-part2</guid>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/readable-code-part2/distill-preview.png" medium="image" type="image/png" width="569" height="322"/>
    </item>
    <item>
      <title>container: v1.0.0 on CRAN</title>
      <link>https://rpahl.github.io/r-some-blog/posts/container1.0</link>
      <description>The update contains some breaking changes and brings a lot of new features
and operators, which markedly improves using containers in both
interactive R sessions and code development.
Also there is a new class dict.table to support the data.table package.</description>
      <category>container</category>
      <category>list</category>
      <category>R package</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/container1.0</guid>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/container1.0/distill-preview.png" medium="image" type="image/png" width="602" height="415"/>
    </item>
    <item>
      <title>Why I don't use R Markdown's ref.label</title>
      <link>https://rpahl.github.io/r-some-blog/posts/ref-label</link>
      <description>R Markdown provides the chunk option `ref.label` to
reuse chunks. In this post, I'll show potential problems with this approach
and present an easy and safe alternative.</description>
      <category>R-Markdown</category>
      <category>knitr</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/ref-label</guid>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/ref-label/distill-preview.png" medium="image" type="image/png" width="279" height="117"/>
    </item>
    <item>
      <title>Quicker knitr kables in RStudio notebook</title>
      <link>https://rpahl.github.io/r-some-blog/posts/kable_if</link>
      <description>In this post a simple RStudio hack is presented on how to display tables
produced via knitr kable efficiently in the RStudio session.</description>
      <category>R-Markdown</category>
      <category>knitr</category>
      <category>R-Studio</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/kable_if</guid>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/kable_if/distill-preview.png" medium="image" type="image/png" width="670" height="468"/>
    </item>
    <item>
      <title>My R Style Guide</title>
      <link>https://rpahl.github.io/r-some-blog/posts/r-style-guide</link>
      <description>This is my take on an R style guide. As such, this is going to be a longer
post in the hope that is useful to some people out there.</description>
      <category>coding style</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/r-style-guide</guid>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/r-style-guide/distill-preview.png" medium="image" type="image/png" width="258" height="191"/>
    </item>
    <item>
      <title>Readable code with base R (part 1)</title>
      <link>https://rpahl.github.io/r-some-blog/posts/readable-code-part1</link>
      <description>Producing readable R code is of great importance, especially if there is a
chance that you will share your code with people other than your future self.
In this series of blog posts, I will present some (often underused) base R
functions for this purpose.</description>
      <category>base R</category>
      <category>coding style</category>
      <guid>https://rpahl.github.io/r-some-blog/posts/readable-code-part1</guid>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      <media:content url="https://rpahl.github.io/r-some-blog/posts/readable-code-part1/distill-preview.png" medium="image" type="image/png" width="569" height="322"/>
    </item>
  </channel>
</rss>
